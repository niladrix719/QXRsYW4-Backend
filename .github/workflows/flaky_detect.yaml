name: Detect Flaky Tests

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:

jobs:
  detect-flaky-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Set Up Go Modules
        run: |
          go mod tidy
          go mod download

      - name: Collect Test Names
        run: |
          echo "🔄 Running all tests once to collect test names..."
          go test -list . ./... | grep '^Test' > test_list.txt || true

          if [ ! -s test_list.txt ]; then
            echo "❌ No tests found. Exiting..."
            exit 1
          fi

          echo "✅ Collected test names:"
          cat test_list.txt

      - name: Run Flaky Test Detection
        run: |
          LOG_FILE=flaky_tests.log
          > "$LOG_FILE"  # Clear log file
          FLAKY_FOUND=0  # Flag to track flaky tests

          echo "🔍 Running each test 10 times to detect flakiness..."
          while IFS= read -r test; do
            FAIL_COUNT=0
            SUCCESS_COUNT=0
            STACKTRACE=""

            echo "➡️ Running test: $test"
            for i in {1..10}; do
              OUTPUT=$(go test -run "^$test$" -v ./... 2>&1)

              if echo "$OUTPUT" | grep -q "FAIL"; then
                FAIL_COUNT=$((FAIL_COUNT + 1))
                STACKTRACE=$(echo "$OUTPUT" | awk '/--- FAIL/ {flag=1} flag' | sed '/FAIL    /q')
                STACKTRACE+="\n$(echo "$OUTPUT" | grep -E '^\s+\S+_test.go:\d+:')"
              else
                SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
              fi
            done

            if [[ "$FAIL_COUNT" -gt 0 && "$SUCCESS_COUNT" -gt 0 ]]; then
              echo "🚨 Flaky Test Detected: $test (Failures: $FAIL_COUNT/10)" >> "$LOG_FILE"
              echo -e "Stack Trace:\n$STACKTRACE" >> "$LOG_FILE"
              echo "----------------------------------" >> "$LOG_FILE"
              FLAKY_FOUND=1  # Set flag to fail the job
            fi
          done < test_list.txt

          # Fail the workflow if flaky tests are found
          if [[ "$FLAKY_FOUND" -eq 1 ]]; then
            echo "❌ Flaky tests detected! Failing the workflow..."
            exit 1
          else
            echo "✅ No flaky tests detected."
          fi

      - name: Send Flaky Test Report to Discord
        if: always()
        run: |
          if [ -s flaky_tests.log ]; then
            PAYLOAD=$(jq -n --arg content "🚨 *Flaky Test Report*\n$(cat flaky_tests.log | sed 's/"/\\"/g')" '{content: $content}')
            curl -X POST -H "Content-Type: application/json" -d "$PAYLOAD" "${{ secrets.DISCORD_WEBHOOK }}"
          fi
